from typing import Tuple

import numpy as np
from gym import Env

from qvl.qlabs import QuanserInteractiveLabs

from tests.performance_environment import destroy_map
from tests.performance_environment import prepare_test_environment
from core.policies.pt_policy import PTPolicy
from .eval import reinformer_car_eval
from .environment import ReinformerQLabEnv
from .vehicle import ReinformerCar, ReinformerPolicy
from .reinformer import ReinFormer
from .settings import *

STATE_MEAN: np.ndarray = np.array([
    1.78749309e-04, -8.10743752e-03, 1.01686319e-02, -8.08942191e-03, 2.01336113e-02, -8.05084080e-03, 3.00918698e-02, -7.99175063e-03, 4.00481881e-02, -7.90897580e-03, 4.99957225e-02, -7.80616681e-03, 5.99391741e-02, -7.68149303e-03, 6.98746329e-02, -7.53505735e-03, 7.97979940e-02, -7.36347252e-03, 8.97171838e-02, -7.17342036e-03, 9.96261953e-02, -6.96191706e-03, 1.09525141e-01, -6.72814880e-03, 1.19410888e-01, -6.47335918e-03, 1.29284445e-01, -6.12989826e-03, 1.39150511e-01, -5.84181471e-03, 1.48997973e-01, -5.52187854e-03, 1.58829898e-01, -5.18115215e-03, 1.68646328e-01, -4.81868092e-03, 1.78445183e-01, -4.43489979e-03, 1.88226771e-01, -4.02910467e-03, 1.97991138e-01, -3.60159929e-03, 2.07736235e-01, -3.15338871e-03, 2.17457095e-01, -2.68514545e-03, 2.27158594e-01, -2.19444398e-03, 2.36837893e-01, -1.68280926e-03, 2.46509139e-01, -1.12647029e-03, 2.56143552e-01, -5.71888054e-04, 2.65752667e-01, 2.90327937e-06, 2.75339044e-01, 5.98034366e-04, 2.84897205e-01, 1.21338632e-03, 2.94432040e-01, 1.85059824e-03, 3.03916816e-01, 2.51965020e-03, 3.13396484e-01, 3.19656843e-03, 3.22847974e-01, 3.89517859e-03, 3.32270628e-01, 4.61349649e-03, 3.41666401e-01, 5.35187492e-03, 3.51031816e-01, 6.11100980e-03, 3.60362710e-01, 6.88896932e-03, 3.69665857e-01, 7.68750286e-03, 3.78939380e-01, 8.50554224e-03, 3.88177951e-01, 9.34252138e-03, 3.97383417e-01, 1.02002237e-02, 4.06555777e-01, 1.10762110e-02, 4.15695262e-01, 1.19732998e-02, 4.24797864e-01, 1.28890937e-02, 4.33866276e-01, 1.38228901e-02, 4.42899638e-01, 1.47764138e-02, 4.51898506e-01, 1.57478325e-02, 4.60838549e-01, 1.67577754e-02, 4.69759595e-01, 1.77661571e-02, 4.78644973e-01, 1.87935495e-02, 4.87492833e-01, 1.98370785e-02, 4.96301688e-01, 2.09005933e-02, 5.05071531e-01, 2.19810244e-02, 5.13802438e-01, 2.30794837e-02, 5.22495235e-01, 2.41951511e-02, 5.31146296e-01, 2.53280509e-02, 5.39757277e-01,
    2.64778551e-02, 5.48328411e-01, 2.76440330e-02, 5.56858396e-01, 2.88270716e-02, 5.65347763e-01, 3.00275616e-02, 5.73793773e-01, 3.12431797e-02, 5.82197742e-01, 3.24748869e-02, 5.90554713e-01, 3.37338620e-02, 5.98874725e-01, 3.49970798e-02, 6.07152277e-01, 3.62759412e-02, 6.15385610e-01, 3.75707685e-02, 6.23575159e-01, 3.88801918e-02, 6.31721904e-01, 4.02055296e-02, 6.39823422e-01, 4.15463532e-02, 6.47881920e-01, 4.29003126e-02, 6.55895741e-01, 4.42692724e-02, 6.63864232e-01, 4.56533456e-02, 6.71788794e-01, 4.70502452e-02, 6.79666989e-01, 4.84614930e-02, 6.87502851e-01, 4.98856474e-02, 6.95290079e-01, 5.13219310e-02, 7.03032327e-01, 5.27721569e-02, 7.10728947e-01, 5.42344713e-02, 7.18379996e-01, 5.57100137e-02, 7.25981260e-01, 5.72001713e-02, 7.33540207e-01, 5.87007352e-02, 7.41051627e-01, 6.02136000e-02, 7.48515204e-01, 6.17378506e-02, 7.55932789e-01, 6.32738700e-02, 7.63303412e-01, 6.48212913e-02, 7.70627001e-01, 6.63805699e-02, 7.77904538e-01, 6.79505994e-02, 7.85132436e-01, 6.95305748e-02, 7.92313265e-01, 7.11219839e-02, 7.99452176e-01, 7.27304136e-02, 8.06538588e-01, 7.43425364e-02, 8.13579240e-01, 7.59648264e-02, 8.20546591e-01, 7.76140053e-02, 8.27489629e-01, 7.92565049e-02, 8.34385112e-01, 8.09056649e-02, 8.41231462e-01, 8.25655508e-02, 8.48023732e-01, 8.42422936e-02, 8.54748695e-01, 8.59272130e-02, 8.61245782e-01, 8.76978800e-02, 8.67191864e-01, 8.97116936e-02, 8.73051416e-01, 9.17485532e-02, 8.78837979e-01, 9.37833075e-02, 8.84564106e-01, 9.58114174e-02, 8.90204844e-01, 9.78595273e-02, 8.95794317e-01, 9.98804406e-02, 9.01324450e-01, 1.01926839e-01, 9.06809689e-01, 1.04043636e-01, 9.12228503e-01, 1.06119916e-01, 9.17589829e-01, 1.08231294e-01, 9.22876135e-01, 1.10295094e-01, 9.28088939e-01, 1.12418101e-01, 9.33264453e-01, 1.14496280e-01, 9.38352362e-01, 1.16594905e-01, 9.43386516e-01, 1.18695852e-01, 9.48358401e-01, 1.20827535e-01,
    9.53298701e-01, 1.22946881e-01, 9.58140544e-01, 1.25079430e-01, 9.62891979e-01, 1.27224306e-01, 9.67604368e-01, 1.29320183e-01, 9.72260920e-01, 1.31408536e-01, 9.76890160e-01, 1.33527053e-01, 9.81375463e-01, 1.35557276e-01, 9.85795601e-01, 1.37626294e-01, 9.90199776e-01, 1.39766783e-01, 9.94577409e-01, 1.41909690e-01, 9.98890807e-01, 1.44080722e-01, 1.00309868e+00, 1.46235065e-01, 1.00728746e+00, 1.48395952e-01, 1.01138917e+00, 1.50554488e-01, 1.01541691e+00, 1.52719468e-01, 1.01934785e+00, 1.54893887e-01, 1.02328042e+00, 1.57066863e-01, 1.02713888e+00, 1.59249547e-01, 1.03094942e+00, 1.61449417e-01, 1.03467537e+00, 1.63628007e-01, 1.03837504e+00, 1.65786602e-01, 1.04199817e+00, 1.67991021e-01, 1.04553959e+00, 1.70159243e-01, 1.04903768e+00, 1.72362282e-01, 1.05247828e+00, 1.74578672e-01, 1.05584278e+00, 1.76768469e-01, 1.05913038e+00, 1.78967035e-01, 1.06238827e+00, 1.81179041e-01, 1.06558730e+00, 1.83347591e-01, 1.06874675e+00, 1.85509879e-01, 1.07182751e+00, 1.87714902e-01, 1.07484400e+00, 1.89950171e-01, 1.07781194e+00, 1.92156819e-01, 1.08066202e+00, 1.94389350e-01, 1.08352288e+00, 1.96599568e-01, 1.08631796e+00, 1.98816298e-01, 1.08902449e+00, 2.01065702e-01, 1.09169086e+00, 2.03342601e-01, 1.09429826e+00, 2.05695301e-01, 1.09681478e+00, 2.08014726e-01, 1.09932294e+00, 2.10279831e-01, 1.10174334e+00, 2.12567104e-01, 1.10409564e+00, 2.14842898e-01, 1.10639559e+00, 2.17062922e-01, 1.10856626e+00, 2.19325288e-01, 1.11062190e+00, 2.21545532e-01, 1.11275218e+00, 2.23756605e-01, 1.11485598e+00, 2.26016009e-01, 1.11687824e+00, 2.28289748e-01, 1.11885320e+00, 2.30527443e-01, 1.12077818e+00, 2.32772047e-01, 1.12265130e+00, 2.35034680e-01, 1.12448266e+00, 2.37273333e-01, 1.12626221e+00, 2.39502729e-01, 1.12797432e+00, 2.41769551e-01, 1.12965456e+00, 2.44023627e-01, 1.13126464e+00, 2.46254739e-01, 1.13283432e+00, 2.48524200e-01, 1.13436061e+00,
    2.50800982e-01, 1.13588004e+00, 2.53110668e-01, 1.13730240e+00, 2.55365895e-01, 1.13869339e+00, 2.57648403e-01, 1.13998209e+00, 2.59908016e-01, 1.14125528e+00, 2.62159104e-01, 1.14247377e+00, 2.64421396e-01, 1.14364546e+00, 2.66669152e-01, 1.14477140e+00, 2.68944232e-01, 1.14587908e+00, 2.71206199e-01, 1.14692069e+00, 2.73494971e-01, 1.14790297e+00, 2.75766020e-01, 1.14883643e+00, 2.78035924e-01, 1.14977360e+00, 2.80278135e-01, 1.15061381e+00, 2.82530418e-01, 1.15143501e+00, 2.84802811e-01, 1.15219959e+00, 2.87033361e-01, 1.15291477e+00, 2.89247910e-01, 1.15362494e+00, 2.91492776e-01, 1.15429498e+00, 2.93756362e-01, 1.15487479e+00, 2.96000002e-01, 1.15542731e+00, 2.98256649e-01, 1.15594160e+00, 3.00504157e-01, 1.15642789e+00, 3.02751000e-01, 1.15683449e+00, 3.04999334e-01, 1.15720395e+00, 3.07219336e-01, 6.77265258e-01, 1.67597059e+00, -9.94304130e-03, 1.24431166e+00, -8.94229709e-04, -8.26489128e-02, 1.14400980e+01, 1.06963841e+01, 9.37722756e+00, 8.89771257e+00, 8.09219851e+00, -3.72785341e+01, -5.64899974e+01, -7.23616113e+01, -8.54790532e+01, -9.35166329e+01, -9.61321759e+01, -9.76974598e+01, -9.85083585e+01, -9.88048140e+01, -9.89606553e+01
])
STATE_STD: np.ndarray = np.array([
    1.80722800e-01, 2.63806792e-01, 1.80809896e-01, 2.63844646e-01, 1.80879390e-01, 2.63879329e-01, 1.80969960e-01, 2.63912660e-01, 1.80984148e-01, 2.63889120e-01, 1.81156499e-01, 2.63985108e-01, 1.81254623e-01, 2.64027362e-01, 1.81355476e-01, 2.64071952e-01, 1.81443107e-01, 2.64093479e-01, 1.81554295e-01, 2.64141419e-01, 1.81661823e-01, 2.64200205e-01, 1.81776275e-01, 2.64271208e-01, 1.81885855e-01, 2.64345005e-01, 1.81940390e-01, 2.64676684e-01, 1.82073865e-01, 2.64777678e-01, 1.82191571e-01, 2.64878267e-01, 1.82317030e-01, 2.64991641e-01, 1.82438048e-01, 2.65123683e-01, 1.82565687e-01, 2.65270470e-01, 1.82694711e-01, 2.65437544e-01, 1.82751773e-01, 2.65567779e-01, 1.82810392e-01, 2.65716874e-01, 1.83105024e-01, 2.66068537e-01, 1.83247198e-01, 2.66328551e-01, 1.83392027e-01, 2.66614535e-01, 1.83464689e-01, 2.67052019e-01, 1.83617169e-01, 2.67395592e-01, 1.83776669e-01, 2.67773830e-01, 1.83863443e-01, 2.68135216e-01, 1.84108821e-01, 2.68639544e-01, 1.84277310e-01, 2.69133857e-01, 1.84372836e-01, 2.69647398e-01, 1.84629694e-01, 2.70284852e-01, 1.84813867e-01, 2.70906450e-01, 1.85001306e-01, 2.71577971e-01, 1.85117479e-01, 2.72243649e-01, 1.85237599e-01, 2.72957296e-01, 1.85596321e-01, 2.73901384e-01, 1.85806231e-01, 2.74785794e-01, 1.85948037e-01, 2.75669946e-01, 1.86246688e-01, 2.76726408e-01, 1.86477466e-01, 2.77790165e-01, 1.86777907e-01, 2.78954066e-01, 1.86944001e-01, 2.80089393e-01, 1.87269369e-01, 2.81405221e-01, 1.87531843e-01, 2.82732324e-01, 1.87799719e-01, 2.84122548e-01, 1.88076599e-01, 2.85587914e-01, 1.87964421e-01, 2.86919186e-01, 1.88339457e-01, 2.88583982e-01, 1.88648171e-01, 2.90266807e-01, 1.88969885e-01, 2.92025036e-01, 1.89308558e-01, 2.93861411e-01, 1.89660201e-01, 2.95774041e-01, 1.90021740e-01, 2.97765176e-01, 1.90390647e-01, 2.99835309e-01, 1.90779925e-01, 3.01977567e-01, 1.91181341e-01, 3.04203827e-01, 1.91597108e-01,
    3.06507008e-01, 1.92032219e-01, 3.08893698e-01, 1.92407880e-01, 3.11305833e-01, 1.92948255e-01, 3.13899360e-01, 1.93436140e-01, 3.16521357e-01, 1.93944543e-01, 3.19193974e-01, 1.94462818e-01, 3.21978136e-01, 1.95004534e-01, 3.24842884e-01, 1.95567504e-01, 3.27781920e-01, 1.96150534e-01, 3.30797395e-01, 1.96748595e-01, 3.33880930e-01, 1.97373949e-01, 3.37041612e-01, 1.98022127e-01, 3.40282862e-01, 1.98700107e-01, 3.43597536e-01, 1.99403554e-01, 3.46986655e-01, 2.00128316e-01, 3.50452802e-01, 2.00888818e-01, 3.53990741e-01, 2.01597826e-01, 3.57560465e-01, 2.02485126e-01, 3.61296641e-01, 2.03327167e-01, 3.65054741e-01, 2.04203458e-01, 3.68886157e-01, 2.05104005e-01, 3.72784336e-01, 2.06043408e-01, 3.76739681e-01, 2.07007273e-01, 3.80777807e-01, 2.08007453e-01, 3.84878706e-01, 2.09043159e-01, 3.89039376e-01, 2.10111748e-01, 3.93271228e-01, 2.11212152e-01, 3.97563888e-01, 2.12352326e-01, 4.01920644e-01, 2.13461456e-01, 4.06301843e-01, 2.14745181e-01, 4.10822570e-01, 2.16000008e-01, 4.15359342e-01, 2.17238682e-01, 4.19957563e-01, 2.18569278e-01, 4.24609025e-01, 2.19867482e-01, 4.29279550e-01, 2.21328071e-01, 4.34031052e-01, 2.22779763e-01, 4.38844559e-01, 2.24278453e-01, 4.43727502e-01, 2.25851813e-01, 4.48684032e-01, 2.27571100e-01, 4.53764150e-01, 2.29392778e-01, 4.58902416e-01, 2.33566292e-01, 4.65480846e-01, 2.45773082e-01, 4.76732255e-01, 2.57579880e-01, 4.87929870e-01, 2.68937770e-01, 4.98867480e-01, 2.80281040e-01, 5.09724673e-01, 2.91202065e-01, 5.20374054e-01, 3.01643108e-01, 5.30797600e-01, 3.11913888e-01, 5.41063252e-01, 3.22132101e-01, 5.51475506e-01, 3.32034563e-01, 5.61641880e-01, 3.41711072e-01, 5.71599356e-01, 3.51344030e-01, 5.81424639e-01, 3.60701178e-01, 5.91175200e-01, 3.69881110e-01, 6.00732787e-01, 3.79026616e-01, 6.10271480e-01, 3.88028940e-01, 6.19683606e-01, 3.96968707e-01, 6.28972863e-01, 4.05585833e-01, 6.38112345e-01,
    4.14321583e-01, 6.47354723e-01, 4.23032825e-01, 6.56479683e-01, 4.31551305e-01, 6.65471534e-01, 4.39882929e-01, 6.74342120e-01, 4.48135933e-01, 6.83122057e-01, 4.56504435e-01, 6.92216263e-01, 4.64987374e-01, 7.01275394e-01, 4.73097090e-01, 7.09910691e-01, 4.81074720e-01, 7.18517845e-01, 4.88961857e-01, 7.27102706e-01, 4.96888218e-01, 7.35642026e-01, 5.04702901e-01, 7.44112390e-01, 5.12538871e-01, 7.52454011e-01, 5.20353419e-01, 7.60824537e-01, 5.28174476e-01, 7.69169272e-01, 5.35838233e-01, 7.77475417e-01, 5.43406860e-01, 7.85724511e-01, 5.50899650e-01, 7.93905939e-01, 5.58424179e-01, 8.02075712e-01, 5.65788827e-01, 8.10165476e-01, 5.73169572e-01, 8.18202513e-01, 5.80550738e-01, 8.26206765e-01, 5.87886577e-01, 8.34268332e-01, 5.95128032e-01, 8.42236602e-01, 6.02411765e-01, 8.50179119e-01, 6.09598884e-01, 8.58045870e-01, 6.16791948e-01, 8.65961964e-01, 6.23990342e-01, 8.73877663e-01, 6.31047607e-01, 8.81762165e-01, 6.38064382e-01, 8.89558024e-01, 6.45093424e-01, 8.97282705e-01, 6.52127058e-01, 9.04947254e-01, 6.59175752e-01, 9.12731672e-01, 6.66072544e-01, 9.20386941e-01, 6.72982844e-01, 9.28057015e-01, 6.79932799e-01, 9.35683657e-01, 6.86832272e-01, 9.43301115e-01, 6.93678033e-01, 9.51126057e-01, 7.00686434e-01, 9.58845332e-01, 7.07276569e-01, 9.66296986e-01, 7.14052023e-01, 9.73731881e-01, 7.20917104e-01, 9.81231010e-01, 7.27627411e-01, 9.88639017e-01, 7.34800045e-01, 9.96081509e-01, 7.41981176e-01, 1.00351050e+00, 7.48617595e-01, 1.01082669e+00, 7.55217640e-01, 1.01817644e+00, 7.61886742e-01, 1.02547460e+00, 7.68469588e-01, 1.03277079e+00, 7.75028882e-01, 1.04004381e+00, 7.81649942e-01, 1.04728171e+00, 7.88127449e-01, 1.05450048e+00, 7.94578836e-01, 1.06170179e+00, 8.01072044e-01, 1.06882621e+00, 8.07539795e-01, 1.07595597e+00, 8.13965913e-01, 1.08310481e+00, 8.20371863e-01, 1.09017154e+00, 8.26809703e-01, 1.09721327e+00, 8.33108557e-01,
    1.10420045e+00, 8.39430353e-01, 1.11120074e+00, 8.45741617e-01, 1.11818971e+00, 8.52124155e-01, 1.12518646e+00, 8.58434442e-01, 1.13212149e+00, 8.64762797e-01, 1.13898034e+00, 8.71033936e-01, 1.14587893e+00, 8.77359304e-01, 1.15274151e+00, 8.83502708e-01, 1.15962017e+00, 8.89725243e-01, 1.16642588e+00, 8.95902375e-01, 1.17320668e+00, 9.02118667e-01, 1.17996186e+00, 9.08218848e-01, 1.18666372e+00, 9.14395772e-01, 1.19340057e+00, 9.20561569e-01, 1.20006433e+00, 9.26697547e-01, 1.20678100e+00, 9.32912367e-01, 1.21346635e+00, 9.38953705e-01, 1.22009844e+00, 9.44939011e-01, 1.22669016e+00, 9.51090495e-01, 1.23320768e+00, 9.57140209e-01, 1.23974186e+00, 9.63185515e-01, 1.24624795e+00, 9.69212765e-01, 1.25272046e+00, 9.75246636e-01, 1.25919608e+00, 9.81323434e-01, 1.26558648e+00, 1.32369719e+00, 1.76500550e+00, 1.81955371e+00, 5.69895309e-01, 3.27526205e+01, 8.48578174e+01, 7.56030861e+00, 7.87156227e+00, 5.85925196e+00, 1.48280205e+01, 2.19364355e+01, 5.57387992e+01, 5.40222454e+01, 4.77155177e+01, 3.62857508e+01, 2.39439795e+01, 1.74954216e+01, 1.19363182e+01, 7.33170854e+00, 4.64884967e+00, 2.07051481e+00
])


def test_reinformer_car() -> None:
    # prepare environment
    destroy_map()
    waypoints: np.ndarray = prepare_test_environment()
    # nn module
    model: ReinFormer = ReinFormer(
        state_dim=STATE_DIM,
        act_dim=ACT_DIM,
        n_blocks=N_BLOCKS,
        h_dim=EMBED_DIM,
        context_len=CONTEXT_LEN,
        n_heads=N_HEADS,
        drop_p=DROPOUT_P,
        init_temperature=INIT_TEMPERATURE,
        target_entropy=-ACT_DIM,
    ).to(DEVICE)
    # prepare policy
    max_steps: int = 100000

    policy: PTPolicy = ReinformerPolicy(model, model_path=MODEL_PATH)
    policy.setup(
        eval_batch_size=1,
        max_test_ep_len=max_steps,
        context_len=CONTEXT_LEN,
        state_mean=STATE_MEAN, # how to get this when deploy on a real car?
        state_std=STATE_STD, # how to get this when deploy on a real car?
        state_dim=STATE_DIM,
        act_dim=ACT_DIM,
        device=DEVICE,
    )
    # prepare car
    counter: int = 0
    actor_id: int = 0
    dt: float = 0.0165
    qlabs: QuanserInteractiveLabs = QuanserInteractiveLabs()
    qlabs.open('localhost')
    car: ReinformerCar = ReinformerCar(
        actor_id=actor_id,
        dt=dt,
        qlabs=qlabs,
        throttle_coeff=0.08,
        steering_coeff=0.5,
    )
    car.setup(
        task=[4, 6, 8, 10, 2], # [20, 22],
        waypoints=waypoints,
        init_waypoint_index=0,
        policy=policy
    )
    # start the simulation
    while counter <= 850:
        car.execute()
        counter += 1
    car.running_gear.read_write_std(0, 0)


def test_reinformer_car_eval(
    state_mean: torch.Tensor = STATE_MEAN,
    state_std: torch.Tensor = STATE_STD
) -> None:
    # render the map
    env: Env = ReinformerQLabEnv()
    # initialize the model
    model: ReinFormer = ReinFormer(
        state_dim=STATE_DIM,
        act_dim=ACT_DIM,
        n_blocks=N_BLOCKS,
        h_dim=EMBED_DIM,
        context_len=CONTEXT_LEN,
        n_heads=N_HEADS,
        drop_p=DROPOUT_P,
        init_temperature=INIT_TEMPERATURE,
        target_entropy=-ACT_DIM,
    ).to(DEVICE)

    result: Tuple[float, float, float, float] = reinformer_car_eval(
        model=model,
        model_path=MODEL_PATH,
        device=DEVICE,
        env=env,
        context_len=CONTEXT_LEN,
        state_mean=state_mean,
        state_std=state_std
    )

    print(f"Result Std: {result[0]}, Result Mean: {result[1]}, Length Mean: {result[2]}, Length Std: {result[3]}")
